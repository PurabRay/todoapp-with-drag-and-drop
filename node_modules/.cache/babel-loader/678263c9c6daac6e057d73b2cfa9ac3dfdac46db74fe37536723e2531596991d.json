{"ast":null,"code":"// import React from 'react';\n// import { useState } from 'react';\n// import './todo.css';\n\n// const Todo = () => {\n//   const categories = [\"Urgent\", \"Work\", \"Personal\"];\n//   const [todo, setTodo] = useState([]);\n//   const [task, setTask] = useState(\"\");\n//   const [edit, setEdit] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n\n//   // New state arrays for each category\n//   const [urgentTasks, setUrgentTasks] = useState([]);\n//   const [workTasks, setWorkTasks] = useState([]);\n//   const [personalTasks, setPersonalTasks] = useState([]);\n\n//   function handleEdit(task) {\n//     setTask(task);\n//     setEdit(task);\n\n//     if (urgentTasks.includes(task)) {\n//       setCategory(\"Urgent\");\n//     } else if (workTasks.includes(task)) {\n//       setCategory(\"Work\");\n//     } else if (personalTasks.includes(task)) {\n//       setCategory(\"Personal\");\n//     }\n//   }\n\n//   function handleAdd() {\n//     if (task.length === 0) {\n//       alert(\"Please enter a task\");\n//       return;\n//     }\n\n//     if (category === \"Urgent\") {\n//       setUrgentTasks([...urgentTasks, task]);\n//     } else if (category === \"Work\") {\n//       setWorkTasks([...workTasks, task]);\n//     } else if (category === \"Personal\") {\n//       setPersonalTasks([...personalTasks, task]);\n//     } else {\n//       // Default to Personal if no category is selected\n//       setPersonalTasks([...personalTasks, task]);\n//     }\n\n//     setTask(\"\");\n//     setCategory(\"\");\n//   }\n\n//   function handleDelete(task) {\n//     if (urgentTasks.includes(task)) {\n//       setUrgentTasks(urgentTasks.filter((item) => item !== task));\n//     } else if (workTasks.includes(task)) {\n//       setWorkTasks(workTasks.filter((item) => item !== task));\n//     } else if (personalTasks.includes(task)) {\n//       setPersonalTasks(personalTasks.filter((item) => item !== task));\n//     }\n//   }\n\n//   return (\n//     <div className=\"todo-container\">\n//       <div className=\"todo-input-container\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter your task\"\n//           onChange={(e) => setTask(e.target.value)}\n//           className=\"task-input\"\n//           value={task}\n//         />\n//       </div>\n//       <select\n//         value={category}\n//         onChange={(e) => setCategory(e.target.value)}\n//         className=\"category-select\"\n//       >\n//         <option value=\"\">Select Category</option>\n//         {categories.map((cat) => (\n//           <option key={cat} value={cat}>\n//             {cat}\n//           </option>\n//         ))}\n//       </select>\n//       <button className=\"add-task-button\" onClick={handleAdd}>\n//         Add task\n//       </button>\n//       <div className=\"tasks-columns\">\n//         {/* Urgent Tasks */}\n//         <div className=\"task-column\">\n//           <h3 className=\"column-title\">Urgent</h3>\n//           <ul className=\"todo-list\">\n//             {urgentTasks.map((item) => {\n//               if (edit === item) {\n//                 return (\n//                   <li key={item} className=\"editing\">\n//                     <input\n//                       type=\"text\"\n//                       value={task}\n//                       onChange={(e) => setTask(e.target.value)}\n//                       className=\"edit-input\"\n//                     />\n//                     <button\n//                       className=\"save-button\"\n//                       onClick={() => {\n//                         setEdit(\"\");\n//                         const updatedUrgent = urgentTasks.map((t) =>\n//                           t === item ? task : t\n//                         );\n//                         setUrgentTasks(updatedUrgent);\n//                         setTask(\"\");\n//                         setCategory(\"\");\n//                       }}\n//                     >\n//                       Save\n//                     </button>\n//                   </li>\n//                 );\n//               }\n//               return (\n//                 <li key={item} className=\"todo-item\">\n//                   <div className=\"todo-content\">\n//                     <span className=\"task-text\">{item.toString()}</span>\n//                     <div className=\"button-group\">\n//                       <button\n//                         className=\"delete-button\"\n//                         onClick={() => handleDelete(item)}\n//                       >\n//                         Delete\n//                       </button>\n//                       <button\n//                         className=\"edit-button\"\n//                         onClick={() => handleEdit(item)}\n//                       >\n//                         Edit\n//                       </button>\n//                     </div>\n//                     <div className=\"category-display\">\n//                       <span className=\"category-label\">Urgent</span>\n//                     </div>\n//                   </div>\n//                 </li>\n//               );\n//             })}\n//           </ul>\n//         </div>\n\n//         {/* Work Tasks */}\n//         <div className=\"task-column\">\n//           <h3 className=\"column-title\">Work</h3>\n//           <ul className=\"todo-list\">\n//             {workTasks.map((item) => {\n//               if (edit === item) {\n//                 return (\n//                   <li key={item} className=\"editing\">\n//                     <input\n//                       type=\"text\"\n//                       value={task}\n//                       onChange={(e) => setTask(e.target.value)}\n//                       className=\"edit-input\"\n//                     />\n//                     <button\n//                       className=\"save-button\"\n//                       onClick={() => {\n//                         setEdit(\"\");\n//                         const updatedWork = workTasks.map((t) =>\n//                           t === item ? task : t\n//                         );\n//                         setWorkTasks(updatedWork);\n//                         setTask(\"\");\n//                         setCategory(\"\");\n//                       }}\n//                     >\n//                       Save\n//                     </button>\n//                   </li>\n//                 );\n//               }\n//               return (\n//                 <li key={item} className=\"todo-item\">\n//                   <div className=\"todo-content\">\n//                     <span className=\"task-text\">{item.toString()}</span>\n//                     <div className=\"button-group\">\n//                       <button\n//                         className=\"delete-button\"\n//                         onClick={() => handleDelete(item)}\n//                       >\n//                         Delete\n//                       </button>\n//                       <button\n//                         className=\"edit-button\"\n//                         onClick={() => handleEdit(item)}\n//                       >\n//                         Edit\n//                       </button>\n//                     </div>\n//                     <div className=\"category-display\">\n//                       <span className=\"category-label\">Work</span>\n//                     </div>\n//                   </div>\n//                 </li>\n//               );\n//             })}\n//           </ul>\n//         </div>\n\n//         {/* Personal Tasks */}\n//         <div className=\"task-column\">\n//           <h3 className=\"column-title\">Personal</h3>\n//           <ul className=\"todo-list\">\n//             {personalTasks.map((item) => {\n//               if (edit === item) {\n//                 return (\n//                   <li key={item} className=\"editing\">\n//                     <input\n//                       type=\"text\"\n//                       value={task}\n//                       onChange={(e) => setTask(e.target.value)}\n//                       className=\"edit-input\"\n//                     />\n//                     <button\n//                       className=\"save-button\"\n//                       onClick={() => {\n//                         setEdit(\"\");\n//                         const updatedPersonal = personalTasks.map((t) =>\n//                           t === item ? task : t\n//                         );\n//                         setPersonalTasks(updatedPersonal);\n//                         setTask(\"\");\n//                         setCategory(\"\");\n//                       }}\n//                     >\n//                       Save\n//                     </button>\n//                   </li>\n//                 );\n//               }\n//               return (\n//                 <li key={item} className=\"todo-item\">\n//                   <div className=\"todo-content\">\n//                     <span className=\"task-text\">{item.toString()}</span>\n//                     <div className=\"button-group\">\n//                       <button\n//                         className=\"delete-button\"\n//                         onClick={() => handleDelete(item)}\n//                       >\n//                         Delete\n//                       </button>\n//                       <button\n//                         className=\"edit-button\"\n//                         onClick={() => handleEdit(item)}\n//                       >\n//                         Edit\n//                       </button>\n//                     </div>\n//                     <div className=\"category-display\">\n//                       <span className=\"category-label\">Personal</span>\n//                     </div>\n//                   </div>\n//                 </li>\n//               );\n//             })}\n//           </ul>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Todo;","map":{"version":3,"names":[],"sources":["C:/Users/PURAB/OneDrive/Desktop/task_manager/tasklist/src/components/todo.js"],"sourcesContent":["// import React from 'react';\r\n// import { useState } from 'react';\r\n// import './todo.css';\r\n\r\n// const Todo = () => {\r\n//   const categories = [\"Urgent\", \"Work\", \"Personal\"];\r\n//   const [todo, setTodo] = useState([]);\r\n//   const [task, setTask] = useState(\"\");\r\n//   const [edit, setEdit] = useState(\"\");\r\n//   const [category, setCategory] = useState(\"\");\r\n\r\n//   // New state arrays for each category\r\n//   const [urgentTasks, setUrgentTasks] = useState([]);\r\n//   const [workTasks, setWorkTasks] = useState([]);\r\n//   const [personalTasks, setPersonalTasks] = useState([]);\r\n\r\n//   function handleEdit(task) {\r\n//     setTask(task);\r\n//     setEdit(task);\r\n\r\n//     if (urgentTasks.includes(task)) {\r\n//       setCategory(\"Urgent\");\r\n//     } else if (workTasks.includes(task)) {\r\n//       setCategory(\"Work\");\r\n//     } else if (personalTasks.includes(task)) {\r\n//       setCategory(\"Personal\");\r\n//     }\r\n//   }\r\n\r\n//   function handleAdd() {\r\n//     if (task.length === 0) {\r\n//       alert(\"Please enter a task\");\r\n//       return;\r\n//     }\r\n\r\n//     if (category === \"Urgent\") {\r\n//       setUrgentTasks([...urgentTasks, task]);\r\n//     } else if (category === \"Work\") {\r\n//       setWorkTasks([...workTasks, task]);\r\n//     } else if (category === \"Personal\") {\r\n//       setPersonalTasks([...personalTasks, task]);\r\n//     } else {\r\n//       // Default to Personal if no category is selected\r\n//       setPersonalTasks([...personalTasks, task]);\r\n//     }\r\n\r\n//     setTask(\"\");\r\n//     setCategory(\"\");\r\n//   }\r\n\r\n//   function handleDelete(task) {\r\n//     if (urgentTasks.includes(task)) {\r\n//       setUrgentTasks(urgentTasks.filter((item) => item !== task));\r\n//     } else if (workTasks.includes(task)) {\r\n//       setWorkTasks(workTasks.filter((item) => item !== task));\r\n//     } else if (personalTasks.includes(task)) {\r\n//       setPersonalTasks(personalTasks.filter((item) => item !== task));\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"todo-container\">\r\n//       <div className=\"todo-input-container\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Enter your task\"\r\n//           onChange={(e) => setTask(e.target.value)}\r\n//           className=\"task-input\"\r\n//           value={task}\r\n//         />\r\n//       </div>\r\n//       <select\r\n//         value={category}\r\n//         onChange={(e) => setCategory(e.target.value)}\r\n//         className=\"category-select\"\r\n//       >\r\n//         <option value=\"\">Select Category</option>\r\n//         {categories.map((cat) => (\r\n//           <option key={cat} value={cat}>\r\n//             {cat}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n//       <button className=\"add-task-button\" onClick={handleAdd}>\r\n//         Add task\r\n//       </button>\r\n//       <div className=\"tasks-columns\">\r\n//         {/* Urgent Tasks */}\r\n//         <div className=\"task-column\">\r\n//           <h3 className=\"column-title\">Urgent</h3>\r\n//           <ul className=\"todo-list\">\r\n//             {urgentTasks.map((item) => {\r\n//               if (edit === item) {\r\n//                 return (\r\n//                   <li key={item} className=\"editing\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={task}\r\n//                       onChange={(e) => setTask(e.target.value)}\r\n//                       className=\"edit-input\"\r\n//                     />\r\n//                     <button\r\n//                       className=\"save-button\"\r\n//                       onClick={() => {\r\n//                         setEdit(\"\");\r\n//                         const updatedUrgent = urgentTasks.map((t) =>\r\n//                           t === item ? task : t\r\n//                         );\r\n//                         setUrgentTasks(updatedUrgent);\r\n//                         setTask(\"\");\r\n//                         setCategory(\"\");\r\n//                       }}\r\n//                     >\r\n//                       Save\r\n//                     </button>\r\n//                   </li>\r\n//                 );\r\n//               }\r\n//               return (\r\n//                 <li key={item} className=\"todo-item\">\r\n//                   <div className=\"todo-content\">\r\n//                     <span className=\"task-text\">{item.toString()}</span>\r\n//                     <div className=\"button-group\">\r\n//                       <button\r\n//                         className=\"delete-button\"\r\n//                         onClick={() => handleDelete(item)}\r\n//                       >\r\n//                         Delete\r\n//                       </button>\r\n//                       <button\r\n//                         className=\"edit-button\"\r\n//                         onClick={() => handleEdit(item)}\r\n//                       >\r\n//                         Edit\r\n//                       </button>\r\n//                     </div>\r\n//                     <div className=\"category-display\">\r\n//                       <span className=\"category-label\">Urgent</span>\r\n//                     </div>\r\n//                   </div>\r\n//                 </li>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </div>\r\n\r\n//         {/* Work Tasks */}\r\n//         <div className=\"task-column\">\r\n//           <h3 className=\"column-title\">Work</h3>\r\n//           <ul className=\"todo-list\">\r\n//             {workTasks.map((item) => {\r\n//               if (edit === item) {\r\n//                 return (\r\n//                   <li key={item} className=\"editing\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={task}\r\n//                       onChange={(e) => setTask(e.target.value)}\r\n//                       className=\"edit-input\"\r\n//                     />\r\n//                     <button\r\n//                       className=\"save-button\"\r\n//                       onClick={() => {\r\n//                         setEdit(\"\");\r\n//                         const updatedWork = workTasks.map((t) =>\r\n//                           t === item ? task : t\r\n//                         );\r\n//                         setWorkTasks(updatedWork);\r\n//                         setTask(\"\");\r\n//                         setCategory(\"\");\r\n//                       }}\r\n//                     >\r\n//                       Save\r\n//                     </button>\r\n//                   </li>\r\n//                 );\r\n//               }\r\n//               return (\r\n//                 <li key={item} className=\"todo-item\">\r\n//                   <div className=\"todo-content\">\r\n//                     <span className=\"task-text\">{item.toString()}</span>\r\n//                     <div className=\"button-group\">\r\n//                       <button\r\n//                         className=\"delete-button\"\r\n//                         onClick={() => handleDelete(item)}\r\n//                       >\r\n//                         Delete\r\n//                       </button>\r\n//                       <button\r\n//                         className=\"edit-button\"\r\n//                         onClick={() => handleEdit(item)}\r\n//                       >\r\n//                         Edit\r\n//                       </button>\r\n//                     </div>\r\n//                     <div className=\"category-display\">\r\n//                       <span className=\"category-label\">Work</span>\r\n//                     </div>\r\n//                   </div>\r\n//                 </li>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </div>\r\n\r\n//         {/* Personal Tasks */}\r\n//         <div className=\"task-column\">\r\n//           <h3 className=\"column-title\">Personal</h3>\r\n//           <ul className=\"todo-list\">\r\n//             {personalTasks.map((item) => {\r\n//               if (edit === item) {\r\n//                 return (\r\n//                   <li key={item} className=\"editing\">\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={task}\r\n//                       onChange={(e) => setTask(e.target.value)}\r\n//                       className=\"edit-input\"\r\n//                     />\r\n//                     <button\r\n//                       className=\"save-button\"\r\n//                       onClick={() => {\r\n//                         setEdit(\"\");\r\n//                         const updatedPersonal = personalTasks.map((t) =>\r\n//                           t === item ? task : t\r\n//                         );\r\n//                         setPersonalTasks(updatedPersonal);\r\n//                         setTask(\"\");\r\n//                         setCategory(\"\");\r\n//                       }}\r\n//                     >\r\n//                       Save\r\n//                     </button>\r\n//                   </li>\r\n//                 );\r\n//               }\r\n//               return (\r\n//                 <li key={item} className=\"todo-item\">\r\n//                   <div className=\"todo-content\">\r\n//                     <span className=\"task-text\">{item.toString()}</span>\r\n//                     <div className=\"button-group\">\r\n//                       <button\r\n//                         className=\"delete-button\"\r\n//                         onClick={() => handleDelete(item)}\r\n//                       >\r\n//                         Delete\r\n//                       </button>\r\n//                       <button\r\n//                         className=\"edit-button\"\r\n//                         onClick={() => handleEdit(item)}\r\n//                       >\r\n//                         Edit\r\n//                       </button>\r\n//                     </div>\r\n//                     <div className=\"category-display\">\r\n//                       <span className=\"category-label\">Personal</span>\r\n//                     </div>\r\n//                   </div>\r\n//                 </li>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Todo;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}