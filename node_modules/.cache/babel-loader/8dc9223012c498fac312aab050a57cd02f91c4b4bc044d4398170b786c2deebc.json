{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PURAB\\\\OneDrive\\\\Desktop\\\\task_manager\\\\tasklist\\\\src\\\\components\\\\todo.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import {useState, useEffect} from 'react'\n// import './todo.css';\n// const Todo = () => {\n// let categories=[\"Urgent\",\"Work\",\"Personal\"];\n// const [todo,setTodo]=useState([]);\n// const [task,setTask]=useState(\"\");\n// const [edit,setEdit]=useState(\"\");\n// const [category, setCategory]= useState(\"\");\n// function handleEdit(item){\n//     setTask(item);\n//     setEdit(item);\n// }\n// function handleAdd(){\n\n//     if(task.length === 0){\n//         alert(\"Please enter a task\")\n//         return;\n//     }\n//     setTodo([...todo,task]);\n\n// }\n// function handleDelete(task){\n//     setTodo(todo.filter((item)=>item !== task));\n// }\n// return (\n//     <div>\n//         <div className=\"todo-input-container\">\n//       <input type=\"text\" placeholder=\"Enter your task\" onChange={(e)=>setTask(e.target.value)}/>\n//       </div>\n//       <select value={category} onChange={(e) => setCategory(e.target.value)}>\n//         <option value=\"\">Select Category</option>\n//         {categories.map((cat) => (\n//           <option key={cat} value={cat}>\n//             {cat}\n//           </option>\n//         ))}\n//       </select>\n//       <button onClick={handleAdd}>Add task</button>\n//       <ul>\n//         {todo.map((item)=>{\n\n//               if (edit === item) {\n//             return (\n//                   <li key={item}>\n//                    <input\n//                       type=\"text\"\n//                       value={task}\n//                       onChange={(e) => setTask(e.target.value)} \n//                     />\n//                     <button onClick={() => {\n//                         setEdit(\"\");\n//                         const index = todo.indexOf(item);\n//                         todo[index]=task;\n//                         setTodo([...todo]);\n//                         setTask(\"\");\n//                     }\n//                         }>Save</button>\n\n//                   </li>\n\n//                 );\n//               }\n//             return <li key={item}>\n//                 <div className='todo-list'>\n//                     <span>{item.toString()}</span>\n//                     <button onClick={()=>handleDelete(item)}>Delete</button>\n//                     <button onClick={()=>handleEdit(item)}>Edit</button>\n//                     <div>\n//             <span>{category}</span>\n//         </div>\n//                 </div>\n//             </li>\n\n//         })}\n//       </ul>\n//       </div>\n//   )\n// }\n\n// export default Todo;\nimport React, { useState } from 'react';\nimport './todo.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const categories = [\"Urgent\", \"Work\", \"Personal\"];\n  const [todo, setTodo] = useState([]);\n  const [task, setTask] = useState(\"\");\n  const [edit, setEdit] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const handleEdit = item => {\n    setTask(item);\n    setEdit(item);\n  };\n  const handleAdd = () => {\n    if (task.trim().length === 0) {\n      alert(\"Please enter a task\");\n      return;\n    }\n    setTodo([...todo, {\n      text: task,\n      category\n    }]);\n    setTask(\"\");\n    setCategory(\"\");\n  };\n  const handleDelete = item => {\n    setTodo(todo.filter(todoItem => todoItem.text !== item.text));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your task\",\n        value: task,\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat,\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todo.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: edit === item.text ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: task,\n            onChange: e => setTask(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEdit(\"\");\n              const updatedTodo = [...todo];\n              updatedTodo[index] = {\n                text: task,\n                category\n              };\n              setTodo(updatedTodo);\n              setTask(\"\");\n              setCategory(\"\");\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(item),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(item.text),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), item.category && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"xn3IqkjRg+Odcl0xp+1k8VJ5ifQ=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","categories","todo","setTodo","task","setTask","edit","setEdit","category","setCategory","handleEdit","item","handleAdd","trim","length","alert","text","handleDelete","filter","todoItem","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","index","updatedTodo","_c","$RefreshReg$"],"sources":["C:/Users/PURAB/OneDrive/Desktop/task_manager/tasklist/src/components/todo.js"],"sourcesContent":["// import React from 'react'\r\n// import {useState, useEffect} from 'react'\r\n// import './todo.css';\r\n// const Todo = () => {\r\n// let categories=[\"Urgent\",\"Work\",\"Personal\"];\r\n// const [todo,setTodo]=useState([]);\r\n// const [task,setTask]=useState(\"\");\r\n// const [edit,setEdit]=useState(\"\");\r\n// const [category, setCategory]= useState(\"\");\r\n// function handleEdit(item){\r\n//     setTask(item);\r\n//     setEdit(item);\r\n// }\r\n// function handleAdd(){\r\n  \r\n//     if(task.length === 0){\r\n//         alert(\"Please enter a task\")\r\n//         return;\r\n//     }\r\n//     setTodo([...todo,task]);\r\n   \r\n// }\r\n// function handleDelete(task){\r\n//     setTodo(todo.filter((item)=>item !== task));\r\n// }\r\n// return (\r\n//     <div>\r\n//         <div className=\"todo-input-container\">\r\n//       <input type=\"text\" placeholder=\"Enter your task\" onChange={(e)=>setTask(e.target.value)}/>\r\n//       </div>\r\n//       <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n//         <option value=\"\">Select Category</option>\r\n//         {categories.map((cat) => (\r\n//           <option key={cat} value={cat}>\r\n//             {cat}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n//       <button onClick={handleAdd}>Add task</button>\r\n//       <ul>\r\n//         {todo.map((item)=>{\r\n           \r\n//               if (edit === item) {\r\n//             return (\r\n//                   <li key={item}>\r\n//                    <input\r\n//                       type=\"text\"\r\n//                       value={task}\r\n//                       onChange={(e) => setTask(e.target.value)} \r\n//                     />\r\n//                     <button onClick={() => {\r\n//                         setEdit(\"\");\r\n//                         const index = todo.indexOf(item);\r\n//                         todo[index]=task;\r\n//                         setTodo([...todo]);\r\n//                         setTask(\"\");\r\n//                     }\r\n//                         }>Save</button>\r\n                        \r\n//                   </li>\r\n                 \r\n//                 );\r\n//               }\r\n//             return <li key={item}>\r\n//                 <div className='todo-list'>\r\n//                     <span>{item.toString()}</span>\r\n//                     <button onClick={()=>handleDelete(item)}>Delete</button>\r\n//                     <button onClick={()=>handleEdit(item)}>Edit</button>\r\n//                     <div>\r\n//             <span>{category}</span>\r\n//         </div>\r\n//                 </div>\r\n//             </li>\r\n            \r\n//         })}\r\n//       </ul>\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n// export default Todo;\r\nimport React, { useState } from 'react';\r\nimport './todo.css';\r\n\r\nconst Todo = () => {\r\n  const categories = [\"Urgent\", \"Work\", \"Personal\"];\r\n  const [todo, setTodo] = useState([]);\r\n  const [task, setTask] = useState(\"\");\r\n  const [edit, setEdit] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const handleEdit = (item) => {\r\n    setTask(item);\r\n    setEdit(item);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if (task.trim().length === 0) {\r\n      alert(\"Please enter a task\");\r\n      return;\r\n    }\r\n    setTodo([...todo, { text: task, category }]);\r\n    setTask(\"\");\r\n    setCategory(\"\");\r\n  };\r\n\r\n  const handleDelete = (item) => {\r\n    setTodo(todo.filter((todoItem) => todoItem.text !== item.text));\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <div className=\"todo-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your task\"\r\n          value={task}\r\n          onChange={(e) => setTask(e.target.value)}\r\n        />\r\n      </div>\r\n      <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n        <option value=\"\">Select Category</option>\r\n        {categories.map((cat) => (\r\n          <option key={cat} value={cat}>\r\n            {cat}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleAdd}>Add Task</button>\r\n      <ul>\r\n        {todo.map((item, index) => (\r\n          <li key={index}>\r\n            {edit === item.text ? (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={task}\r\n                  onChange={(e) => setTask(e.target.value)}\r\n                />\r\n                <button\r\n                  onClick={() => {\r\n                    setEdit(\"\");\r\n                    const updatedTodo = [...todo];\r\n                    updatedTodo[index] = { text: task, category };\r\n                    setTodo(updatedTodo);\r\n                    setTask(\"\");\r\n                    setCategory(\"\");\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <div className=\"todo-list\">\r\n                <span>{item.text}</span>\r\n                <button onClick={() => handleDelete(item)}>Delete</button>\r\n                <button onClick={() => handleEdit(item.text)}>Edit</button>\r\n                {item.category && (\r\n                  <div>\r\n                    <span>{item.category}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}