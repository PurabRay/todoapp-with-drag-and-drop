{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PURAB\\\\OneDrive\\\\Desktop\\\\task_manager\\\\tasklist\\\\src\\\\components\\\\todo.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import {useState, useEffect} from 'react'\n// import './todo.css';\n// const Todo = () => {\n// let categories=[\"Urgent\",\"Work\",\"Personal\"];\n// const [todo,setTodo]=useState([]);\n// const [task,setTask]=useState(\"\");\n// const [edit,setEdit]=useState(\"\");\n// const [category, setCategory]= useState(\"\");\n// function handleEdit(item){\n//     setTask(item);\n//     setEdit(item);\n// }\n// function handleAdd(){\n\n//     if(task.length === 0){\n//         alert(\"Please enter a task\")\n//         return;\n//     }\n//     setTodo([...todo,task]);\n\n// }\n// function handleDelete(task){\n//     setTodo(todo.filter((item)=>item !== task));\n// }\n// return (\n//     <div>\n//         <div className=\"todo-input-container\">\n//       <input type=\"text\" placeholder=\"Enter your task\" onChange={(e)=>setTask(e.target.value)}/>\n//       </div>\n//       <select value={category} onChange={(e) => setCategory(e.target.value)}>\n//         <option value=\"\">Select Category</option>\n//         {categories.map((cat) => (\n//           <option key={cat} value={cat}>\n//             {cat}\n//           </option>\n//         ))}\n//       </select>\n//       <button onClick={handleAdd}>Add task</button>\n//       <ul>\n//         {todo.map((item)=>{\n\n//               if (edit === item) {\n//             return (\n//                   <li key={item}>\n//                    <input\n//                       type=\"text\"\n//                       value={task}\n//                       onChange={(e) => setTask(e.target.value)} \n//                     />\n//                     <button onClick={() => {\n//                         setEdit(\"\");\n//                         const index = todo.indexOf(item);\n//                         todo[index]=task;\n//                         setTodo([...todo]);\n//                         setTask(\"\");\n//                     }\n//                         }>Save</button>\n\n//                   </li>\n\n//                 );\n//               }\n//             return <li key={item}>\n//                 <div className='todo-list'>\n//                     <span>{item.toString()}</span>\n//                     <button onClick={()=>handleDelete(item)}>Delete</button>\n//                     <button onClick={()=>handleEdit(item)}>Edit</button>\n//                     <div>\n//             <span>{category}</span>\n//         </div>\n//                 </div>\n//             </li>\n\n//         })}\n//       </ul>\n//       </div>\n//   )\n// }\n\n// export default Todo;\nimport React from 'react';\nimport { useState } from 'react';\nimport './todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  let categories = ['Urgent', 'Work', 'Personal'];\n  const [todo, setTodo] = useState([]);\n  const [task, setTask] = useState('');\n  const [edit, setEdit] = useState('');\n  const [category, setCategory] = useState('');\n  function handleEdit(item) {\n    setTask(item);\n    setEdit(item);\n  }\n  function handleAdd() {\n    if (task.length === 0) {\n      alert('Please enter a task');\n      return;\n    }\n    setTodo([...todo, task]);\n  }\n  function handleDelete(task) {\n    setTodo(todo.filter(item => item !== task));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your task\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todo.map(item => {\n        if (edit === item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: task,\n              onChange: e => setTask(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEdit('');\n                const index = todo.indexOf(item);\n                todo[index] = task;\n                setTodo([...todo]);\n                setTask('');\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(item),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(item),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-badge\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"5ME3P9/cHRe77NHb6+/NVTkcK6M=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todo","_s","categories","todo","setTodo","task","setTask","edit","setEdit","category","setCategory","handleEdit","item","handleAdd","length","alert","handleDelete","filter","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","index","indexOf","toString","_c","$RefreshReg$"],"sources":["C:/Users/PURAB/OneDrive/Desktop/task_manager/tasklist/src/components/todo.js"],"sourcesContent":["// import React from 'react'\r\n// import {useState, useEffect} from 'react'\r\n// import './todo.css';\r\n// const Todo = () => {\r\n// let categories=[\"Urgent\",\"Work\",\"Personal\"];\r\n// const [todo,setTodo]=useState([]);\r\n// const [task,setTask]=useState(\"\");\r\n// const [edit,setEdit]=useState(\"\");\r\n// const [category, setCategory]= useState(\"\");\r\n// function handleEdit(item){\r\n//     setTask(item);\r\n//     setEdit(item);\r\n// }\r\n// function handleAdd(){\r\n  \r\n//     if(task.length === 0){\r\n//         alert(\"Please enter a task\")\r\n//         return;\r\n//     }\r\n//     setTodo([...todo,task]);\r\n   \r\n// }\r\n// function handleDelete(task){\r\n//     setTodo(todo.filter((item)=>item !== task));\r\n// }\r\n// return (\r\n//     <div>\r\n//         <div className=\"todo-input-container\">\r\n//       <input type=\"text\" placeholder=\"Enter your task\" onChange={(e)=>setTask(e.target.value)}/>\r\n//       </div>\r\n//       <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n//         <option value=\"\">Select Category</option>\r\n//         {categories.map((cat) => (\r\n//           <option key={cat} value={cat}>\r\n//             {cat}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n//       <button onClick={handleAdd}>Add task</button>\r\n//       <ul>\r\n//         {todo.map((item)=>{\r\n           \r\n//               if (edit === item) {\r\n//             return (\r\n//                   <li key={item}>\r\n//                    <input\r\n//                       type=\"text\"\r\n//                       value={task}\r\n//                       onChange={(e) => setTask(e.target.value)} \r\n//                     />\r\n//                     <button onClick={() => {\r\n//                         setEdit(\"\");\r\n//                         const index = todo.indexOf(item);\r\n//                         todo[index]=task;\r\n//                         setTodo([...todo]);\r\n//                         setTask(\"\");\r\n//                     }\r\n//                         }>Save</button>\r\n                        \r\n//                   </li>\r\n                 \r\n//                 );\r\n//               }\r\n//             return <li key={item}>\r\n//                 <div className='todo-list'>\r\n//                     <span>{item.toString()}</span>\r\n//                     <button onClick={()=>handleDelete(item)}>Delete</button>\r\n//                     <button onClick={()=>handleEdit(item)}>Edit</button>\r\n//                     <div>\r\n//             <span>{category}</span>\r\n//         </div>\r\n//                 </div>\r\n//             </li>\r\n            \r\n//         })}\r\n//       </ul>\r\n//       </div>\r\n//   )\r\n// }\r\n\r\n// export default Todo;\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport './todo.css';\r\n\r\nconst Todo = () => {\r\n  let categories = ['Urgent', 'Work', 'Personal'];\r\n  const [todo, setTodo] = useState([]);\r\n  const [task, setTask] = useState('');\r\n  const [edit, setEdit] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  function handleEdit(item) {\r\n    setTask(item);\r\n    setEdit(item);\r\n  }\r\n\r\n  function handleAdd() {\r\n    if (task.length === 0) {\r\n      alert('Please enter a task');\r\n      return;\r\n    }\r\n    setTodo([...todo, task]);\r\n  }\r\n\r\n  function handleDelete(task) {\r\n    setTodo(todo.filter((item) => item !== task));\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <div className=\"todo-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your task\"\r\n          onChange={(e) => setTask(e.target.value)}\r\n        />\r\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat} value={cat}>\r\n              {cat}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleAdd}>Add task</button>\r\n      </div>\r\n\r\n      <ul>\r\n        {todo.map((item) => {\r\n          if (edit === item) {\r\n            return (\r\n              <li key={item}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={task}\r\n                  onChange={(e) => setTask(e.target.value)}\r\n                />\r\n                <button\r\n                  onClick={() => {\r\n                    setEdit('');\r\n                    const index = todo.indexOf(item);\r\n                    todo[index] = task;\r\n                    setTodo([...todo]);\r\n                    setTask('');\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </li>\r\n            );\r\n          }\r\n          return (\r\n            <li key={item}>\r\n              <div className=\"todo-list\">\r\n                <span>{item.toString()}</span>\r\n                <button onClick={() => handleDelete(item)}>Delete</button>\r\n                <button onClick={() => handleEdit(item)}>Edit</button>\r\n                <div className=\"category-badge\">\r\n                  <span>{category}</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}