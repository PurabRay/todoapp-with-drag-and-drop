{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PURAB\\\\OneDrive\\\\Desktop\\\\task_manager\\\\tasklist\\\\src\\\\components\\\\todo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './todo.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const categories = [\"Urgent\", \"Work\", \"Personal\"];\n\n  // Separate arrays for each category with task objects\n  const [urgentTasks, setUrgentTasks] = useState([]);\n  const [workTasks, setWorkTasks] = useState([]);\n  const [personalTasks, setPersonalTasks] = useState([]);\n  const [task, setTask] = useState(\"\");\n  const [edit, setEdit] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  // Helper function to generate unique IDs\n  const generateId = () => `${Date.now()}-${Math.random()}`;\n  function handleEdit(item, currentCategory) {\n    setTask(item.text);\n    setEdit(item.id);\n    setCategory(currentCategory);\n  }\n  function handleAdd() {\n    if (task.length === 0) {\n      alert(\"Please enter a task\");\n      return;\n    }\n    const newTask = {\n      id: generateId(),\n      text: task\n    };\n    if (category === \"Urgent\") {\n      setUrgentTasks([...urgentTasks, newTask]);\n    } else if (category === \"Work\") {\n      setWorkTasks([...workTasks, newTask]);\n    } else {\n      setPersonalTasks([...personalTasks, newTask]);\n    }\n    setTask(\"\");\n    setCategory(\"\");\n  }\n  function handleDelete(taskId, currentCategory) {\n    if (currentCategory === \"Urgent\") {\n      setUrgentTasks(urgentTasks.filter(task => task.id !== taskId));\n    } else if (currentCategory === \"Work\") {\n      setWorkTasks(workTasks.filter(task => task.id !== taskId));\n    } else {\n      setPersonalTasks(personalTasks.filter(task => task.id !== taskId));\n    }\n  }\n  function handleSave(taskId, currentCategory) {\n    const updatedText = task.trim();\n    if (updatedText.length === 0) {\n      alert(\"Please enter a task\");\n      return;\n    }\n    if (currentCategory === \"Urgent\") {\n      setUrgentTasks(urgentTasks.map(task => task.id === taskId ? {\n        ...task,\n        text: updatedText\n      } : task));\n    } else if (currentCategory === \"Work\") {\n      setWorkTasks(workTasks.map(task => task.id === taskId ? {\n        ...task,\n        text: updatedText\n      } : task));\n    } else {\n      setPersonalTasks(personalTasks.map(task => task.id === taskId ? {\n        ...task,\n        text: updatedText\n      } : task));\n    }\n    setEdit(\"\");\n    setTask(\"\");\n    setCategory(\"\");\n  }\n\n  // Drag and Drop Handler\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    // Dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    // If dropped in the same place, do nothing\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    // Helper function to reorder tasks\n    const reorder = (list, startIndex, endIndex) => {\n      const result = Array.from(list);\n      const [removed] = result.splice(startIndex, 1);\n      result.splice(endIndex, 0, removed);\n      return result;\n    };\n\n    // Moving within the same category\n    if (source.droppableId === destination.droppableId) {\n      if (source.droppableId === \"Urgent\") {\n        const reordered = reorder(urgentTasks, source.index, destination.index);\n        setUrgentTasks(reordered);\n      } else if (source.droppableId === \"Work\") {\n        const reordered = reorder(workTasks, source.index, destination.index);\n        setWorkTasks(reordered);\n      } else if (source.droppableId === \"Personal\") {\n        const reordered = reorder(personalTasks, source.index, destination.index);\n        setPersonalTasks(reordered);\n      }\n    } else {\n      // Moving from one category to another\n      let sourceList, setSourceList, destList, setDestList;\n      if (source.droppableId === \"Urgent\") {\n        sourceList = urgentTasks;\n        setSourceList = setUrgentTasks;\n      } else if (source.droppableId === \"Work\") {\n        sourceList = workTasks;\n        setSourceList = setWorkTasks;\n      } else {\n        sourceList = personalTasks;\n        setSourceList = setPersonalTasks;\n      }\n      if (destination.droppableId === \"Urgent\") {\n        destList = urgentTasks;\n        setDestList = setUrgentTasks;\n      } else if (destination.droppableId === \"Work\") {\n        destList = workTasks;\n        setDestList = setWorkTasks;\n      } else {\n        destList = personalTasks;\n        setDestList = setPersonalTasks;\n      }\n      const [movedTask] = sourceList.splice(source.index, 1);\n      destList.splice(destination.index, 0, movedTask);\n      setSourceList([...sourceList]);\n      setDestList([...destList]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your task\",\n          onChange: e => setTask(e.target.value),\n          className: \"task-input\",\n          value: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          className: \"category-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-task-button\",\n          onClick: handleAdd,\n          children: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-columns\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"Urgent\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-column\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"column-title\",\n              children: \"Urgent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"todo-list\",\n              children: [urgentTasks.map((item, index) => {\n                if (edit === item.id) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"editing\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: task,\n                      onChange: e => setTask(e.target.value),\n                      className: \"edit-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"save-button\",\n                      onClick: () => handleSave(item.id, \"Urgent\"),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 27\n                    }, this)]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"todo-item urgent\",\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"todo-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"task-text\",\n                        children: item.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"button-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"delete-button\",\n                          onClick: () => handleDelete(item.id, \"Urgent\"),\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 220,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"edit-button\",\n                          onClick: () => handleEdit(item, \"Urgent\"),\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"category-display\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"category-label\",\n                          children: \"Urgent\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 27\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"Work\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-column\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"column-title\",\n              children: \"Work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"todo-list\",\n              children: [workTasks.map((item, index) => {\n                if (edit === item.id) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"editing\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: task,\n                      onChange: e => setTask(e.target.value),\n                      className: \"edit-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"save-button\",\n                      onClick: () => handleSave(item.id, \"Work\"),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this)]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"todo-item work\",\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"todo-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"task-text\",\n                        children: item.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"button-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"delete-button\",\n                          onClick: () => handleDelete(item.id, \"Work\"),\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 285,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"edit-button\",\n                          onClick: () => handleEdit(item, \"Work\"),\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"category-display\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"category-label\",\n                          children: \"Work\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 27\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"Personal\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-column\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"column-title\",\n              children: \"Personal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"todo-list\",\n              children: [personalTasks.map((item, index) => {\n                if (edit === item.id) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"editing\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: task,\n                      onChange: e => setTask(e.target.value),\n                      className: \"edit-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"save-button\",\n                      onClick: () => handleSave(item.id, \"Personal\"),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 27\n                    }, this)]\n                  }, item.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 25\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"todo-item personal\",\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"todo-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"task-text\",\n                        children: item.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"button-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"delete-button\",\n                          onClick: () => handleDelete(item.id, \"Personal\"),\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 350,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"edit-button\",\n                          onClick: () => handleEdit(item, \"Personal\"),\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 356,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 349,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"category-display\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"category-label\",\n                          children: \"Personal\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 364,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 27\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this);\n              }), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"Rxpaz8Y4CDwoNI8ir5MiAu51kkU=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Todo","_s","categories","urgentTasks","setUrgentTasks","workTasks","setWorkTasks","personalTasks","setPersonalTasks","task","setTask","edit","setEdit","category","setCategory","generateId","Date","now","Math","random","handleEdit","item","currentCategory","text","id","handleAdd","length","alert","newTask","handleDelete","taskId","filter","handleSave","updatedText","trim","map","onDragEnd","result","source","destination","droppableId","index","reorder","list","startIndex","endIndex","Array","from","removed","splice","reordered","sourceList","setSourceList","destList","setDestList","movedTask","children","className","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","cat","onClick","provided","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","_c","$RefreshReg$"],"sources":["C:/Users/PURAB/OneDrive/Desktop/task_manager/tasklist/src/components/todo.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './todo.css';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Todo = () => {\r\n  const categories = [\"Urgent\", \"Work\", \"Personal\"];\r\n  \r\n  // Separate arrays for each category with task objects\r\n  const [urgentTasks, setUrgentTasks] = useState([]);\r\n  const [workTasks, setWorkTasks] = useState([]);\r\n  const [personalTasks, setPersonalTasks] = useState([]);\r\n  \r\n  const [task, setTask] = useState(\"\");\r\n  const [edit, setEdit] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  // Helper function to generate unique IDs\r\n  const generateId = () => `${Date.now()}-${Math.random()}`;\r\n\r\n  function handleEdit(item, currentCategory) {\r\n    setTask(item.text);\r\n    setEdit(item.id);\r\n    setCategory(currentCategory);\r\n  }\r\n\r\n  function handleAdd() {\r\n    if (task.length === 0) {\r\n      alert(\"Please enter a task\");\r\n      return;\r\n    }\r\n\r\n    const newTask = { id: generateId(), text: task };\r\n\r\n    if (category === \"Urgent\") {\r\n      setUrgentTasks([...urgentTasks, newTask]);\r\n    } else if (category === \"Work\") {\r\n      setWorkTasks([...workTasks, newTask]);\r\n    } else {\r\n      setPersonalTasks([...personalTasks, newTask]);\r\n    }\r\n\r\n    setTask(\"\");\r\n    setCategory(\"\");\r\n  }\r\n\r\n  function handleDelete(taskId, currentCategory) {\r\n    if (currentCategory === \"Urgent\") {\r\n      setUrgentTasks(urgentTasks.filter(task => task.id !== taskId));\r\n    } else if (currentCategory === \"Work\") {\r\n      setWorkTasks(workTasks.filter(task => task.id !== taskId));\r\n    } else {\r\n      setPersonalTasks(personalTasks.filter(task => task.id !== taskId));\r\n    }\r\n  }\r\n\r\n  function handleSave(taskId, currentCategory) {\r\n    const updatedText = task.trim();\r\n\r\n    if (updatedText.length === 0) {\r\n      alert(\"Please enter a task\");\r\n      return;\r\n    }\r\n\r\n    if (currentCategory === \"Urgent\") {\r\n      setUrgentTasks(urgentTasks.map(task => \r\n        task.id === taskId ? { ...task, text: updatedText } : task\r\n      ));\r\n    } else if (currentCategory === \"Work\") {\r\n      setWorkTasks(workTasks.map(task => \r\n        task.id === taskId ? { ...task, text: updatedText } : task\r\n      ));\r\n    } else {\r\n      setPersonalTasks(personalTasks.map(task => \r\n        task.id === taskId ? { ...task, text: updatedText } : task\r\n      ));\r\n    }\r\n\r\n    setEdit(\"\");\r\n    setTask(\"\");\r\n    setCategory(\"\");\r\n  }\r\n\r\n  // Drag and Drop Handler\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    // Dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    // If dropped in the same place, do nothing\r\n    if (\r\n      source.droppableId === destination.droppableId &&\r\n      source.index === destination.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Helper function to reorder tasks\r\n    const reorder = (list, startIndex, endIndex) => {\r\n      const result = Array.from(list);\r\n      const [removed] = result.splice(startIndex, 1);\r\n      result.splice(endIndex, 0, removed);\r\n      return result;\r\n    };\r\n\r\n    // Moving within the same category\r\n    if (source.droppableId === destination.droppableId) {\r\n      if (source.droppableId === \"Urgent\") {\r\n        const reordered = reorder(urgentTasks, source.index, destination.index);\r\n        setUrgentTasks(reordered);\r\n      } else if (source.droppableId === \"Work\") {\r\n        const reordered = reorder(workTasks, source.index, destination.index);\r\n        setWorkTasks(reordered);\r\n      } else if (source.droppableId === \"Personal\") {\r\n        const reordered = reorder(personalTasks, source.index, destination.index);\r\n        setPersonalTasks(reordered);\r\n      }\r\n    } else {\r\n      // Moving from one category to another\r\n      let sourceList, setSourceList, destList, setDestList;\r\n\r\n      if (source.droppableId === \"Urgent\") {\r\n        sourceList = urgentTasks;\r\n        setSourceList = setUrgentTasks;\r\n      } else if (source.droppableId === \"Work\") {\r\n        sourceList = workTasks;\r\n        setSourceList = setWorkTasks;\r\n      } else {\r\n        sourceList = personalTasks;\r\n        setSourceList = setPersonalTasks;\r\n      }\r\n\r\n      if (destination.droppableId === \"Urgent\") {\r\n        destList = urgentTasks;\r\n        setDestList = setUrgentTasks;\r\n      } else if (destination.droppableId === \"Work\") {\r\n        destList = workTasks;\r\n        setDestList = setWorkTasks;\r\n      } else {\r\n        destList = personalTasks;\r\n        setDestList = setPersonalTasks;\r\n      }\r\n\r\n      const [movedTask] = sourceList.splice(source.index, 1);\r\n      destList.splice(destination.index, 0, movedTask);\r\n\r\n      setSourceList([...sourceList]);\r\n      setDestList([...destList]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"todo-container\">\r\n        <div className=\"todo-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your task\"\r\n            onChange={(e) => setTask(e.target.value)}\r\n            className=\"task-input\"\r\n            value={task}\r\n          />\r\n          <select\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n            className=\"category-select\"\r\n          >\r\n            <option value=\"\">Select Category</option>\r\n            {categories.map((cat) => (\r\n              <option key={cat} value={cat}>\r\n                {cat}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button className=\"add-task-button\" onClick={handleAdd}>\r\n            Add task\r\n          </button>\r\n        </div>\r\n        <div className=\"tasks-columns\">\r\n          {/* Urgent Tasks */}\r\n          <Droppable droppableId=\"Urgent\">\r\n            {(provided) => (\r\n              <div className=\"task-column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                <h3 className=\"column-title\">Urgent</h3>\r\n                <ul className=\"todo-list\">\r\n                  {urgentTasks.map((item, index) => {\r\n                    if (edit === item.id) {\r\n                      return (\r\n                        <li key={item.id} className=\"editing\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={task}\r\n                            onChange={(e) => setTask(e.target.value)}\r\n                            className=\"edit-input\"\r\n                          />\r\n                          <button\r\n                            className=\"save-button\"\r\n                            onClick={() => handleSave(item.id, \"Urgent\")}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                        </li>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                        {(provided) => (\r\n                          <li\r\n                            className=\"todo-item urgent\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            <div className=\"todo-content\">\r\n                              <span className=\"task-text\">{item.text}</span>\r\n                              <div className=\"button-group\">\r\n                                <button\r\n                                  className=\"delete-button\"\r\n                                  onClick={() => handleDelete(item.id, \"Urgent\")}\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                                <button\r\n                                  className=\"edit-button\"\r\n                                  onClick={() => handleEdit(item, \"Urgent\")}\r\n                                >\r\n                                  Edit\r\n                                </button>\r\n                              </div>\r\n                              <div className=\"category-display\">\r\n                                <span className=\"category-label\">Urgent</span>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          {/* Work Tasks */}\r\n          <Droppable droppableId=\"Work\">\r\n            {(provided) => (\r\n              <div className=\"task-column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                <h3 className=\"column-title\">Work</h3>\r\n                <ul className=\"todo-list\">\r\n                  {workTasks.map((item, index) => {\r\n                    if (edit === item.id) {\r\n                      return (\r\n                        <li key={item.id} className=\"editing\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={task}\r\n                            onChange={(e) => setTask(e.target.value)}\r\n                            className=\"edit-input\"\r\n                          />\r\n                          <button\r\n                            className=\"save-button\"\r\n                            onClick={() => handleSave(item.id, \"Work\")}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                        </li>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                        {(provided) => (\r\n                          <li\r\n                            className=\"todo-item work\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            <div className=\"todo-content\">\r\n                              <span className=\"task-text\">{item.text}</span>\r\n                              <div className=\"button-group\">\r\n                                <button\r\n                                  className=\"delete-button\"\r\n                                  onClick={() => handleDelete(item.id, \"Work\")}\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                                <button\r\n                                  className=\"edit-button\"\r\n                                  onClick={() => handleEdit(item, \"Work\")}\r\n                                >\r\n                                  Edit\r\n                                </button>\r\n                              </div>\r\n                              <div className=\"category-display\">\r\n                                <span className=\"category-label\">Work</span>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          {/* Personal Tasks */}\r\n          <Droppable droppableId=\"Personal\">\r\n            {(provided) => (\r\n              <div className=\"task-column\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                <h3 className=\"column-title\">Personal</h3>\r\n                <ul className=\"todo-list\">\r\n                  {personalTasks.map((item, index) => {\r\n                    if (edit === item.id) {\r\n                      return (\r\n                        <li key={item.id} className=\"editing\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={task}\r\n                            onChange={(e) => setTask(e.target.value)}\r\n                            className=\"edit-input\"\r\n                          />\r\n                          <button\r\n                            className=\"save-button\"\r\n                            onClick={() => handleSave(item.id, \"Personal\")}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                        </li>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                        {(provided) => (\r\n                          <li\r\n                            className=\"todo-item personal\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            <div className=\"todo-content\">\r\n                              <span className=\"task-text\">{item.text}</span>\r\n                              <div className=\"button-group\">\r\n                                <button\r\n                                  className=\"delete-button\"\r\n                                  onClick={() => handleDelete(item.id, \"Personal\")}\r\n                                >\r\n                                  Delete\r\n                                </button>\r\n                                <button\r\n                                  className=\"edit-button\"\r\n                                  onClick={() => handleEdit(item, \"Personal\")}\r\n                                >\r\n                                  Edit\r\n                                </button>\r\n                              </div>\r\n                              <div className=\"category-display\">\r\n                                <span className=\"category-label\">Personal</span>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}