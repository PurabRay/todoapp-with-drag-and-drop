{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PURAB\\\\OneDrive\\\\Desktop\\\\task_manager\\\\tasklist\\\\src\\\\components\\\\todo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  let categories = [\"Urgent\", \"Work\", \"Personal\"];\n  const [todo, setTodo] = useState([]);\n  const [task, setTask] = useState(\"\");\n  const [edit, setEdit] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  function handleEdit(item) {\n    setTask(item);\n    setEdit(item);\n  }\n  function handleAdd() {\n    if (task.length === 0) {\n      alert(\"Please enter a task\");\n      return;\n    }\n    setTodo([...todo, task]);\n  }\n  function handleDelete(task) {\n    setTodo(todo.filter(item => item !== task));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your task\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat,\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todo.map(item => {\n        if (edit === item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: task,\n              onChange: e => setTask(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEdit(\"\");\n                const index = todo.indexOf(item);\n                todo[index] = task;\n                setTodo([...todo]);\n                setTask(\"\");\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)]\n          }, item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(item),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(item),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"2/KJXlgICbpsSs36GHRft2KGgEw=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Todo","_s","categories","todo","setTodo","task","setTask","edit","setEdit","category","setCategory","handleEdit","item","handleAdd","length","alert","handleDelete","filter","children","className","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","index","indexOf","toString","_c","$RefreshReg$"],"sources":["C:/Users/PURAB/OneDrive/Desktop/task_manager/tasklist/src/components/todo.js"],"sourcesContent":["import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport './todo.css';\r\nconst Todo = () => {\r\nlet categories=[\"Urgent\",\"Work\",\"Personal\"];\r\nconst [todo,setTodo]=useState([]);\r\nconst [task,setTask]=useState(\"\");\r\nconst [edit,setEdit]=useState(\"\");\r\nconst [category, setCategory]= useState(\"\");\r\nfunction handleEdit(item){\r\n    setTask(item);\r\n    setEdit(item);\r\n}\r\nfunction handleAdd(){\r\n  \r\n    if(task.length === 0){\r\n        alert(\"Please enter a task\")\r\n        return;\r\n    }\r\n    setTodo([...todo,task]);\r\n   \r\n}\r\nfunction handleDelete(task){\r\n    setTodo(todo.filter((item)=>item !== task));\r\n}\r\nreturn (\r\n    <div>\r\n        <div className=\"todo-input-container\">\r\n      <input type=\"text\" placeholder=\"Enter your task\" onChange={(e)=>setTask(e.target.value)}/>\r\n      </div>\r\n      <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n        <option value=\"\">Select Category</option>\r\n        {categories.map((cat) => (\r\n          <option key={cat} value={cat}>\r\n            {cat}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleAdd}>Add task</button>\r\n      <ul>\r\n        {todo.map((item)=>{\r\n           \r\n              if (edit === item) {\r\n            return (\r\n                  <li key={item}>\r\n                   <input\r\n                      type=\"text\"\r\n                      value={task}\r\n                      onChange={(e) => setTask(e.target.value)} \r\n                    />\r\n                    <button onClick={() => {\r\n                        setEdit(\"\");\r\n                        const index = todo.indexOf(item);\r\n                        todo[index]=task;\r\n                        setTodo([...todo]);\r\n                        setTask(\"\");\r\n                    }\r\n                        }>Save</button>\r\n                        \r\n                  </li>\r\n                 \r\n                );\r\n              }\r\n            return <li key={item}>\r\n                <div className='todo-list'>\r\n                    <span>{item.toString()}</span>\r\n                    <button onClick={()=>handleDelete(item)}>Delete</button>\r\n                    <button onClick={()=>handleEdit(item)}>Edit</button>\r\n                    <div>\r\n            <span>{category}</span>\r\n        </div>\r\n                </div>\r\n            </li>\r\n            \r\n        })}\r\n      </ul>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}